name: CryptoChart CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Compile Protobufs
      run: python proto/compile_proto.py

    - name: Lint with Ruff
      run: |
        ruff check .
        ruff format --check .

    - name: Static Type Check with MyPy
      run: mypy src/cryptochart

    - name: Run Tests with Pytest
      # Qt dependencies are needed for UI tests
      run: |
        sudo apt-get update && sudo apt-get install -y libegl1 libxcb-xinerama0 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0
      if: runner.os == 'Linux'
      
    - name: Run tests
      run: pytest

  build-desktop:
    name: Build for ${{ matrix.os }}
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Compile Protobufs
      run: python proto/compile_proto.py

    - name: Build with PyInstaller
      run: pyinstaller --noconfirm --onefile --windowed --name cryptochart src/cryptochart/ui/main.py

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cryptochart-${{ matrix.os }}
        path: |
          dist/cryptochart
          dist/cryptochart.exe
        if-no-files-found: error

  build-android:
    name: Build for Android
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build with Buildozer (Placeholder)
      run: |
        echo "INFO: This is a placeholder for the Android build process."
        echo "INFO: A full Buildozer setup typically requires a dedicated Docker image"
        echo "INFO: with specific system libraries and Android SDK/NDK versions."
        echo "INFO: See https://buildozer.readthedocs.io/en/latest/ for setup details."
        # Example of what a real command might look like:
        # docker run --rm -v "$(pwd)":/home/user/project kived/buildozer:latest android debug