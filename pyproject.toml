[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "cryptochart"
version = "1.0.0"
description = "A high-performance, real-time cryptocurrency charting client with multi-exchange aggregation."
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [
  { name = "CryptoChart Contributors", email = "contact@example.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    # Core Networking & Async
    "websockets>=12.0",
    "httpx[http2,brotli]>=0.27.0",
    "aiodns>=3.0.0", # Recommended for httpx
    "async-timeout>=4.0.3",

    # Data Processing & Serialization
    "protobuf>=4.25.0,<5.0",
    "numpy>=1.26.0",

    # GUI & Charting
    "PySide6>=6.6.0",
    "pyqtgraph>=0.13.3",
    "qasync>=0.27.0",

    # Utilities
    "aiofiles>=23.2.0",
    "keyring>=24.3.0",
    "loguru>=0.7.2",
]

[project.urls]
"Homepage" = "https://github.com/example/cryptochart"
"Bug Tracker" = "https://github.com/example/cryptochart/issues"

[project.scripts]
cryptochart = "cryptochart.ui.main:main"

[project.optional-dependencies]
dev = [
    # Linting & Formatting
    "ruff>=0.4.0",
    "mypy>=1.8.0",

    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-benchmark>=4.0.0",
    "pytest-qt>=4.2.0",
    "pytest-mock>=3.12.0",

    # Protobuf compilation
    "grpcio-tools>=1.60.0",
    "types-protobuf>=4.24.0",

    # Packaging
    "pyinstaller>=6.0.0",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["cryptochart"]

# --- Ruff Linter and Formatter Configuration ---
[tool.ruff]
target-version = "py310"
src = ["src", "tests", "scripts"]

[tool.ruff.lint]
select = [
    "A", "ANN", "ARG", "B", "C4", "C90", "COM", "D", "DTZ", "E", "W", "EM",
    "ERA", "F", "G", "I", "ICN", "INP", "ISC", "N", "PERF", "PGH", "PIE",
    "PL", "PT", "PYI", "Q", "RET", "RSE", "RUF", "S", "SIM", "T20", "TID",
    "UP", "YTT",
]
ignore = [
    "D100", "D104", "D107", "ANN101", "ANN102", "ANN401", "FIX002",
    "TD002", "TD003", "D203", "D213", "COM812", "ISC001", "PLR0913", "PLR2004",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]
"scripts/**/*.py" = ["T201"]
"proto/compile_proto.py" = ["T201", "S603"]
"src/cryptochart/types/*_pb2.py" = ["ALL"]
"src/*_pb2.py" = ["ALL"]

# --- MyPy Type Checker Configuration ---
[tool.mypy]
python_version = "3.10"
files = ["src/cryptochart", "tests", "scripts"]
exclude = 'src/cryptochart/types/.*_pb2\\.py$'

# Strictness Flags
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
no_implicit_reexport = true
strict_equality = true
warn_unused_configs = true
no_implicit_optional = true
disallow_any_unimported = true

# Per-module settings for libraries without stubs
[[tool.mypy.overrides]]
module = [
    "pyqtgraph.*",
    "qt_asyncio.*",
    "keyring.*",
]
ignore_missing_imports = true

# --- Pytest Configuration ---
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests/unit", "tests/integration"]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources.*",
    "ignore::DeprecationWarning:pyqtgraph.*",
]